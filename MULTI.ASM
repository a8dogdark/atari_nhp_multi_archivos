    ICL 'SYSEQU.M65'
PCRSR   = $CB
PUNTERO	= $90
BUFER	= $4000
LENGHT	= $4000
    ORG $2000
    ICL 'ROMRAM.ASM'
    ICL 'HEXASCII.ASM'
    ICL 'MEM256K.ASM'
    ICL 'LOADER.ASM'
    ICL 'PAGINA7.ASM'
    ICL 'PAGINA4.ASM'


DLSPRIN
:3    .BYTE $70
    .BYTE $46
    .WORD SHOWPRIN
:3    .BYTE $70
:14    .BYTE $02
    .BYTE $41
    .WORD DLSPRIN

SHOWPRIN
    .SB " "
    .SB +128,"dogdark "
    .SB " softwares "
    .SB +32,"QRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRE"
    .SB "|"
    .SB +128," COPIADOR MULTIARCHIVOS NHP V3.1 2023 "
    .SB "|"
    .SB +32,"ARRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRD"
    .SB "| MEMORIA DISPONIBLE           "
VEOMEMORIA
    .SB "******* |"
    .SB "| BANCOS DISPONIBLES                "
VEOBANCOS
    .SB "** |"
    .SB "| ESTADO PORTB                     "
VEOPORTB
    .SB "*** |"
    .SB "| ARCHIVOS EN MEMORIA (MAX 3)        "
VEOARCHIVOS
    .SB "* |"
    .SB "| "
    .SB +128,"A"
    .SB "UDIO ESTADO                     "
VEOAUDIOESTADO
    .SB "*** |"
    .SB "| "
    .SB +128,"B"
    .SB "YTES POR BLOQUES                "
VEOBYTESBLOQUES
    .SB "*** |"
    .SB "| "
    .SB +128,"C"
    .SB "ARGAR ARCHIVOS EN MEMORIA           |"
    .SB "| "
    .SB +128,"D"
    .SB "IRECTORIO                           |"
    .SB "| "
    .SB +128,"G"
    .SB "RABAR ARCHIVOS EN CINTA             |"
    .SB "| "
    .SB +128,"V"
    .SB "ER ARCHIVOS CARGADOS                |"
    .SB +32,"ZRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRC"

;************************************************
; DEFINICION DEL DISPLAY PARA CARGA DE ARCHIVOS
;************************************************
DLSCARGA
:3 	.BYTE $70
	.BYTE $46
	.WORD SHOWCARGA
:1	.BYTE $70
:16	.BYTE $02
	.BYTE $70,$06,$70,$06,$70,$02
	.BYTE $41
	.WORD DLSCARGA
SHOWCARGA
    .SB " "
    .SB +128,"dogdark "
    .SB " softwares "
	.SB +32,"QRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRE"
	.SB "|"
	.SB +128,"          CARGA DE ARCHIVOS           "
	.SB "|"
	.SB +32,"ARRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRD"
	.SB "|                                      |"
	.SB "| ARCHIVO N -. "
VEONAR
	.SB "*                       |"
	.SB "|                                      |"
	.SB "| PORTB     : "
VEOPORTBCARGA
	.SB "***                      |"
	.SB "| TITULO 01 : "
TITULO01 
	.SB "********************     |"
	.SB "| TITULO 02 : "
TITULO02
	.SB "********************     |"
	.SB "| FUENTE    : "
FUENTE
	.SB "********************     |"
	.SB "| BYTES     : "
VEOBYTESCARGA
	.SB "******                   |"
	.SB "| BLOQUES   : "
VEOBLOQUECARGA
	.SB "****                     |"
	.SB "| BUFFER    : "
VEOBUFERCARGA
	.SB "****                     |"
	.SB "| LENGHT    : "
VEOLENGHTCARGA
	.SB "****                     |"
	.SB "|                                      |"
	.SB +32,"ZRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRC"
GTITULO01
	.SB "--ACA VA EL TITULO--"
GTITULO02
	.SB "--ACA VA EL TITULO--"
MENSAJECARGA
	.SB "****************************************"

;************************************************
; DEFINICION DEL DISPLAY
; PARA DIRECTORIO
;************************************************
?DIR
	.BYTE $70,$70,$70,$46
	.WORD ???DIR
	.BYTE $70,$02,$02,$02,$02,$02,$02,$02
	.BYTE $02,$02,$41
	.WORD ?DIR
;************************************************
;VALORES PARA PANTALLA DIRECTORIO
;************************************************
???DIR
	.SB "     DIRECTORIO     "
??DIR
:10	.SB "                                        "

DATAARCHIVO
:150	.BYTE 0
TOTALARCHIVOS
    .BYTE 0
AUDIO
    .BYTE 0
BYBLOQUE
    .BYTE 0
AUDIOON
    .SB " ON"
AUDIOOFF
    .SB "OFF"
BYBLOQUE128
    .SB "128"
BYBLOQUE254
    .SB "254"
RY
    .BYTE 0,0,0
LEN
    .BYTE 0,0,0
??FUENTE
	.BYTE '                    '
ALL
	.BYTE 'D:*.*',$9B
BANCA
	.BYTE 0,0
MENSAJESTART
	.SB "    PRESIONE "
	.SB +128," START "
	.SB " PARA CONTINUAR.    "
;************************************************
;FUNCION QUE NOS PERMITE PODER CONVERTIR UN BYTE
;EN ATASCII, USADO PARA INGRESO DE TITULOS Y
;FUENTE, NO TIENE LIMITACIONES MAYORES EN LAS
;PULSACIONES DEL TECLADO
;************************************************
ASCINT
	CMP #32
	BCC ADD64
	CMP #96
	BCC SUB32
	CMP #128
	BCC REMAIN
	CMP #160
	BCC ADD64
	CMP #224
	BCC SUB32
	BCS REMAIN
ADD64
	CLC
	ADC #64
	BCC REMAIN
SUB32
	SEC
	SBC #32
REMAIN
	RTS
;************************************************
;GENERA UNA LIMPIEZA TOTAL DEL DISPLAY DEL
;DIRECTORIO
;************************************************
CLS
	LDX # <??DIR
	LDY # >??DIR
	STX PCRSR
	STY PCRSR+1
	LDY #$00
	LDX #$00
?CLS
	LDA #$00
	STA (PCRSR),Y
	INY
	BNE ??CLS
	INX
	INC PCRSR+1
??CLS
	CPY #104	;$68
	BNE ?CLS
	CPX #$01
	BNE ?CLS
	RTS
;************************************************
;FUNCION QUE ABRE PERIFERICOS
;************************************************
OPEN
	LDX #$10
	LDA #$03
	STA $0342,X
	LDA # <??FUENTE
	STA $0344,X
	LDA # >??FUENTE
	STA $0345,X
	LDA #$04
	STA $034A,X
	LDA #$80
	STA $034B,X
	JSR $E456
	DEY
	BNE DIR
	RTS
;************************************************
;FUNCION QUE CIERRA PERIFERICOS
;************************************************
CLOSE
	LDX #$10
	LDA #$0C
	STA $0342,X
	JMP $E456
;************************************************
;MUESTRA EL DIRECTORIO EN PANTALLA
;************************************************
DIR
	JSR CLOSE
	JSR CLS
	LDX # <?DIR
	LDY # >?DIR
	STX $0230
	STY $0231
	LDX # <??DIR
	LDY # >??DIR
	STX PCRSR
	STY PCRSR+1
	
;	
	LDX #$10
	LDA #$03
	STA $0342,X
	LDA # <ALL
	STA $0344,X
	LDA # >ALL
	STA $0345,X
	LDA #$06
	STA $034A,X
	LDA #$00
	STA $034B,X
	JSR $E456
	LDA #$07
	STA $0342,X
	LDA #$00
	STA $0348,X
	STA $0349,X
	STA RY
	STA RY+1
LEDIR
	JSR $E456
	BMI ?EXIT
	CMP #155
	BEQ EXIT
	JSR ASCINT
	LDY RY
	STA (PCRSR),Y
	INC RY
	BNE F0
	INC PCRSR+1
	INC RY+1
F0
	LDY RY+1
	CPY #$01
	BNE F1
	LDY RY
	CPY #104	;$68
	BCC F1
	JSR PAUSE
	INC RY
F1
	JMP LEDIR
EXIT
	INC RY
	INC RY
	INC RY
	JMP LEDIR
?EXIT
	JSR CLOSE
	JSR PAUSE
	JSR CLS
	PLA
	PLA
	JMP START
PAUSE
	LDA 53279
	CMP #$06
	BNE PAUSE
	JSR CLS
	LDA #$00
	STA RY
	STA RY+1
	LDA # <??DIR
	STA PCRSR
	LDA # >??DIR
	STA PCRSR+1
	LDX #$10
	RTS


;************************************************
;RUTINA QUE NOS PERMMITE PODER INGRESAR INFORMA-
;CION A UN CAMPO ESPECIFICO YA ANTES DECLARADO
;MOSTRANDO UN CURSOR EN FORMA PARPADEANTE
;************************************************
;
;************************************************
;CURSOR PARPADEANTE
;************************************************
FLSH
	LDY RY
	LDA (PCRSR),Y
	EOR #63
	STA (PCRSR),Y
	LDA #$10
	STA $021A
	RTS
;************************************************
;ABRE PERIFERICO TECLADO
;************************************************
OPENK
	LDA #255
	STA 764
	LDX #$10
	LDA #$03
	STA $0342,X
	STA $0345,X
	LDA #$26
	STA $0344,X
	LDA #$04
	STA $034A,X
	JSR $E456
	LDA #$07
	STA $0342,X
	LDA #$00
	STA $0348,X
	STA $0349,X
	STA RY
	RTS
;************************************************
;RUTINA QUE LEE LO TECLEADO
;************************************************
RUTLEE
	LDX # <FLSH
	LDY # >FLSH
	LDA #$10
	STX $0228
	STY $0229
	STA $021A
	JSR OPENK
GETEC
	JSR $E456
	CMP #$7E
	BNE C0
	LDY RY
	BEQ GETEC
	LDA #$00
	STA (PCRSR),Y
	LDA #63		;$3F
	DEY
	STA (PCRSR),Y
	DEC RY
	JMP GETEC
C0
	CMP #155	;$9B
	BEQ C2
	JSR ASCINT
	LDY RY
	STA (PCRSR),Y
	CPY #20		;#14
	BEQ C1
	INC RY
C1
	JMP GETEC
C2
	JSR CLOSE
	LDA #$00
	STA $021A
	LDY RY
	STA (PCRSR),Y
	RTS

MUESTROMEMORIA
    JSR LIMPIOVAL
    LDA MEMORY
    STA VAL
    LDA MEMORY+1
    STA VAL+1
    LDA MEMORY+2
    STA VAL+2
    JSR BIN2BCD
    LDX #7
    LDY #6
MUESTROMEMORIA02
    LDA RESATASCII,X
    STA VEOMEMORIA,Y
    DEX
    DEY
    BPL MUESTROMEMORIA02
    RTS
MUESTROBANCOS
    JSR LIMPIOVAL
    LDA BANKOS
    STA VAL
    JSR BIN2BCD
    LDA RESATASCII+7
    STA VEOBANCOS+1
    LDA RESATASCII+6
    STA VEOBANCOS
    RTS
MUESTROPORTB
    JSR LIMPIOVAL
    LDA PORTB
    STA VAL
    JSR BIN2BCD
    LDX #7
    LDY #2
MUESTROPORTB02
    LDA RESATASCII,X
    STA VEOPORTB,Y
    DEX
    DEY
    BPL MUESTROPORTB02
    RTS
MUESTROARCHIVOS
    JSR LIMPIOVAL
    LDA TOTALARCHIVOS
    STA VAL
    JSR BIN2BCD
    LDA RESATASCII+7
    STA VEOARCHIVOS
    RTS
MUESTROAUDIO
    LDX AUDIO
	INX
	STX AUDIO
	LDA #<AUDIOON
	LDY #>AUDIOON
	CPX #0
	BEQ MUESTROAUDIO01

	LDA #<AUDIOOFF
	LDY #>AUDIOOFF
	CPX #1
	BEQ MUESTROAUDIO01

	LDX #$FF
	STX AUDIO
	JMP MUESTROAUDIO
MUESTROAUDIO01
	STA MUESTROAUDIO02+1
	STY MUESTROAUDIO02+2
	LDX #2
MUESTROAUDIO02
	LDA AUDIOON,X
	STA VEOAUDIOESTADO,X
	DEX
	BPL MUESTROAUDIO02
    RTS
MUESTROBYBLOQUE
    LDX BYBLOQUE
    INX
    STX BYBLOQUE
    LDA #<BYBLOQUE128
    LDY #>BYBLOQUE128
    CPX #0
    BEQ MUESTROBYBLOQUE01
    LDA #<BYBLOQUE254
    LDY #>BYBLOQUE254
    CPX #1
    BEQ MUESTROBYBLOQUE01
    LDX #$FF
    STX BYBLOQUE
    JMP MUESTROBYBLOQUE
MUESTROBYBLOQUE01
    STA MUESTROBYBLOQUE02+1
    STY MUESTROBYBLOQUE02+2
    LDX #2
MUESTROBYBLOQUE02
    LDA BYBLOQUE128,X
    STA VEOBYTESBLOQUES,X
    DEX
    BPL MUESTROBYBLOQUE02
    RTS
RESETER
    LDX #$FF
    STX AUDIO
    STX BYBLOQUE
	LDX #$00
	STX BANCA
	STX BANCA+1
	STX AUDIO
	STX TOTALARCHIVOS
	STX BYBLOQUE
	LDA #<DATAARCHIVO
	STA PUNTERO
	LDA #>DATAARCHIVO
	STA PUNTERO+1
    RTS
SERASTART
	LDA CONSOL
	CMP #$06
	BNE SERASTART
SERASTART01
	LDA CONSOL
	CMP #$06
	BEQ SERASTART01
	RTS
FGET

	RTS
;************************************************
;DISPLAY DE INICIO DEL PROGRAMA Y FUNCIONALIDAD
;DIRECTA A TODAS SUS FUNCIONES
;************************************************
DOS
	JMP ($0C)
@START
	JSR DOS
START
    LDA #<DLSPRIN
    LDX #>DLSPRIN
    STA SDLSTL
    STX SDLSTH
    LDA #$02
    STA 710
    STA 712
    JSR MEMORIA
    JSR MUESTROMEMORIA
    JSR MUESTROBANCOS
    JSR MUESTROPORTB
    JSR MUESTROARCHIVOS
    JSR MUESTROAUDIO
    JSR MUESTROBYBLOQUE
;*************************
;MENU PRINCIPAL
;*************************
MENU
    JSR CLOSE
	JSR OPENK

    JSR $E456
    CMP #$41
    BEQ ESA

    CMP #$42
    BEQ ESB

    CMP #$43
    BEQ ESC

    CMP #$44
    BEQ ESD

    CMP #$47
    BEQ ESG

    CMP #$56
    BEQ ESV

    JMP MENU
ESA
    JSR MUESTROAUDIO
    JMP MENU
ESB
    JSR MUESTROBYBLOQUE
    JMP MENU
ESC
    JMP CARGAARCHIVOS
ESD
    LDA #$A0
    STA 710
    JMP MENU
ESG
    LDA #$C0
    STA 710
    JMP MENU
ESV
    LDA #$E0
    STA 710
    JMP MENU
;****************************************
; CARGA DE ARCHIVOS A MEMORIA
;****************************************
CARGAARCHIVOS
	LDA #<DLSCARGA
	LDX #>DLSCARGA
	STA SDLSTL
    STX SDLSTH
	LDA #$02
	STA 710
	STA 712
	CLC
;VALIDAMOS SI YA EXISTEN LOS 3 ARCHIVOS INGRESADOS
	LDX TOTALARCHIVOS
	INX
	CPX #4
	BEQ ERRORCARGA
	TXA
	ADC #16
	STA VEONAR
	JMP CARGAARCHIVOS02
ERRORCARGA
	JMP START
;RESETAMOS LOS VALORES
CARGAARCHIVOS02
	LDX #19
	LDA #$00
CARGAARCHIVOS03
	STA TITULO01,X
	STA TITULO02,X
	STA GTITULO01,X
	STA GTITULO02,X
	STA FUENTE,X
	STA MENSAJECARGA,X
	STA MENSAJECARGA+20,X
	DEX
	BPL CARGAARCHIVOS03
	LDA #$10
	LDX #5
;RESETEAMOS LOS BYTES
CARGAARCHIVOS04
	STA VEOBYTESCARGA,X
	DEX
	BPL CARGAARCHIVOS04
;RESETEAMOS LOS BLOQUES
	STA VEOBLOQUECARGA
	STA VEOBLOQUECARGA+1
	STA VEOBLOQUECARGA+2
	STA VEOBLOQUECARGA+3
;MOSTRAMOS EL BUFER EN LA PANTALLA
	JSR LIMPIOVAL
	LDA #<BUFER
	STA VAL
	LDA #>BUFER
	STA VAL+1
	JSR BIN3BCD
	LDX #3
CARGAARCHIVOS05
	LDA HEXATASCII,X
	STA VEOBUFERCARGA,X
	DEX
	BPL CARGAARCHIVOS05
;MOSTRAMOS EL LENGHT EN PANTALLA
	JSR LIMPIOVAL
	LDA #<LENGHT
	STA VAL
	LDA #>LENGHT
	STA VAL+1
	JSR BIN3BCD
	LDX #3
CARGAARCHIVOS06
	LDA HEXATASCII,X
	STA VEOLENGHTCARGA,X
	DEX
	BPL CARGAARCHIVOS06
	JSR LIMPIOVAL
;MOSTRAMOS EL PORTB POR DEFECTO EN PANTALLA
	LDA PORTB
	STA VAL
	JSR BIN2BCD
	LDY #7
	LDX #2
CARGAARCHIVOS07
	LDA RESATASCII,Y
	STA VEOPORTBCARGA,X
	DEY
	DEX
	BPL CARGAARCHIVOS07
;INGRESAMOS EL PRIMER TITULO
	LDA #<TITULO01
	LDX #>TITULO01
	STA PCRSR
	STX PCRSR+1
	JSR RUTLEE
	TYA
	BEQ NOTITLE
	LSR 
	STA RY+1
	LDA #10
	SEC
	SBC RY+1
	STA RY+1
	LDX #$00
	LDY RY+1
WRITE
;************************************************
;AGREGO EL TITULO 01 AL LOADER
;************************************************
	LDA TITULO01,X
	STA GTITULO01,Y
	INY
	INX
	CPX RY
	BNE WRITE
NOTITLE
;INGRESAMOS EL PRIMER TITULO
	LDA #<TITULO02
	LDX #>TITULO02
	STA PCRSR
	STX PCRSR+1
	JSR RUTLEE
	TYA
	BEQ NOTITLE02
	LSR 
	STA RY+1
	LDA #10
	SEC
	SBC RY+1
	STA RY+1
	LDX #$00
	LDY RY+1
WRITE02
;************************************************
;AGREGO EL TITULO 01 AL LOADER
;************************************************
	LDA TITULO02,X
	STA GTITULO02,Y
	INY
	INX
	CPX RY
	BNE WRITE02
NOTITLE02
;INGRESAMOS EL PRIMER TITULO
	LDA #<FUENTE
	LDX #>FUENTE
	STA PCRSR
	STX PCRSR+1
	JSR RUTLEE
	LDY RY
	CPY #1
	BEQ OPENPER
	LDY #19
CONV
	LDA FUENTE,Y
	BEQ ?REMAIN
	AND #$7F
	CMP #64
	BCC ADD32
	CMP #96
	BCC SUB64
	BCS ?REMAIN
ADD32
	CLC
	ADC #32
	BCC OKLET
SUB64
	SEC
	SBC #64
?REMAIN
	LDA #$9B
OKLET
	STA ??FUENTE,Y
	DEY
	BPL CONV
;GUARDAMOS LOS DATOS EN LA VARIABLE DATAARCHIVO
	LDY #49
	LDX #19
INICIOFGET
	LDA GTITULO02,X
	STA (PUNTERO),Y
	DEY
	DEX
	BPL INICIOFGET
	LDX #19
INICIOFGET02
	LDA GTITULO01,X
	STA (PUNTERO),Y
	DEY
	DEX
	BPL INICIOFGET02
	LDA #<LENGHT
	STA (PUNTERO),Y
	DEY
	LDA #>LENGHT
	STA (PUNTERO),Y
	DEY
	LDA #<BUFER
	STA (PUNTERO),Y
	DEY
	LDA #>BUFER
	STA (PUNTERO),Y
	LDY #0
	LDX BANCA
	LDA B,X
	STA (PUNTERO),Y





;************************************************
;ABRO PERIFERICO
;************************************************
OPENPER
	JSR OPEN
;************************************************
;CARGO DATA A MEMORIA
;************************************************
	JSR FGET
;************************************************
;CIERRO PERIFERICO
;************************************************
	JSR CLOSE
	LDX #39
FINCARGA
	LDA MENSAJESTART,X
	STA MENSAJECARGA,X
	DEX
	BPL FINCARGA
	JSR SERASTART
	


;MENSAJE PRESIONE START


	LDA #$40
	STA 710
	JMP *
;01 BYTE PORTB
;02 BYTE BUFER
;02 BYTE LENGHT
;03 BYTE TOTAL DE BYTES CARGADOS
;02 BYTE TOTAL DE BLOQUES
;20 BYTE TITULO GRANDE 01
;20 BYTE TITULO GRANDE 02
;50 TOTAL DE BYTES

INICIO
    JSR CLOSE
	JSR ROMRAM			;COPIO LA ROM A LA RAM
	LDX # <@START
	LDY # >@START
	LDA #$03
	STX $02
	STY $03
	STA $09
	LDY #$FF
	STY $08
	INY   
	STY $0244
    JSR RESETER
    JMP START
    RUN INICIO